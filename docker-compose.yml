version: "3.9"

services:
  api:
    depends_on:
      database:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    volumes:
      - static-files:/app/static/
    environment:
      ASPNETCORE_URLS: http://+:5001
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_POSTGRES__HOST: database
      ASPNETCORE_POSTGRES__USER: ${POSTGRES_USER}
      ASPNETCORE_POSTGRES__PASSWORD: ${POSTGRES_PASSWORD}
      ASPNETCORE_POSTGRES__PORT: 5432
      ASPNETCORE_JWT__SECRET: ${ASPNETCORE_JWT__SECRET}
      ASPNETCORE_JWT__ISSUER: ${ASPNETCORE_JWT__ISSUER}
  database:
    image: postgres:alpine
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 15s
      retries: 10
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
volumes:
  db-data:
    driver: local
  static-files:
    driver: local